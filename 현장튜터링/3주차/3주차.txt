[1주차 보고서 review]
Frontend vs Backend

Backend 
실시간으로 변동되는 정보들 처리
API설계를 주로 함.

Frontend
변동되지 않는 정보들을 주로 처리
UI/UX를 고려한 레이아웃 구성, 이벤트 핸들링을 하는 업무.
최종 산출물을 내는 책임이 있다.
따라서 기획부터 개발, 끝까지 여러 사람들과 소통이 필요하다.
(Company's Culture Fit)친화력도 정말 중요하다.

Team 구성 1.5(Frontend) vs 1(Backend)

공부방법
공부의 양이 많기 때문에 Keyword 중심으로 공부하는 것을 추천.
큰 프로젝트에서 지장이 생길 때 많은 비중을 차지하는 것이 HTML/CSS/JS 문제이다.

default.css, reset.css를 실무에서 쓰지 않는 이유
두 번 연산하는 것은 비효율적이고 웹이 무거워짐.

JS
동기처리 후 비동기처리

[2주차 보고서 review]
!important 안티패턴일 수 있기 때문에 충분한 심사숙고가 필요.

position: sticky를 사용하기 위한 조건
1) 해당 element의 height 설정
2) 레이아웃을 구성하려는 의도에 맞는 z-index의 조정

폰트 파일 용량(확장자들임)
ttf > woff > woff2

우선순위가 필요한 이유
woff, woff2는 IE에서 작동하지 않을 때가 있기 때문에
아무 설정하지 않았더라도 우선순위에 따라 폰트를 불러옴.

Asset관리가 가장 중요하다. 이미지나 폰트 파일을 가져올 때 초기 렌더링 관리 중요
lazy image loading, image compress 등 로딩 방식을 관리하거나 용량을 감소시킴

[3주차 강의 복습]
<script>는 <body>에 넣으면 anti pattern

웹사이트 성능 분석 web application으로 보통 Lighthouse를 많이 쓴다.

[JS]
Chrome에서 window, Document와
Safari에서 window, Document와 다르다. cross browsing issue가 생길 수 있다.

[React Tip]
ctrl + '.'  대부분이 해결된다.
ctrl + spacebar : import 해결

과제 설명 :
Component 만들어보기
(ex) 카드가 있는데 이를 컴포넌트로 만들어 반복문으로 해결해보기. 외에도


Searching : git config 초기 설정
